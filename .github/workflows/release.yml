name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions: write-all
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest] #,macos-latest,]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            binary_extension:
              .exe
              #- os: macos-latest
              #  target: x86_64-apple-darwin
              #  binary_extension: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_extension: ""
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cross
        run: cargo install cross

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: cross build --target ${{ matrix.target }} --release
        env:
          CARGO_TERM_COLOR: always

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/termai${{ matrix.binary_extension }} termai-${{ matrix.target }}${{ matrix.binary_extension }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: termai-${{ matrix.target }}
          path: termai-${{ matrix.target }}${{ matrix.binary_extension }}

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/termai-${{ matrix.target }}${{ matrix.binary_extension }}
          asset_name: termai-${{ matrix.os }}
          asset_content_type: application/octet-stream
